name: Check Download Status

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * MON'

jobs:
  check_status:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.check_download_status.outputs.matrix }}
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Check Download Status
      id: check_download_status
      uses: luxtorpeda-dev/action-check-download-status@main
  create_tickets:
    runs-on: ubuntu-latest
    if: ${{ needs.check_status.outputs.matrix && needs.check_status.outputs.matrix != '{}' && needs.check_status.outputs.matrix != '' }}
    needs: check_status
    strategy:
      matrix: ${{fromJson(needs.check_status.outputs.matrix)}}
    steps:
    - name: Create Issue for network
      if: ${{ matrix.type == 'network_error' }}
      uses: jayqi/failed-build-issue-action@v1
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        label-name: ${{ matrix.type }}
        title-template: Download failed for ${{ matrix.game_name }} ${{ matrix.download_name }}
        body-template: |
            Download failed for ${{ matrix.game_name }} ${{ matrix.download_name }}

            Response was ${{ matrix.download_status }} with text of ${{ matrix.download_status_text }}

            App id of ${{ matrix.game_app_id }}

            URL was: ${{ matrix.full_url }}

    - name: Create Issue for new release
      if: ${{ matrix.type == 'new_release' }}
      uses: jayqi/failed-build-issue-action@v1
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        label-name: ${{ matrix.type }}
        title-template: New release for ${{ matrix.game_name }} ${{ matrix.download_name }}
        body-template: |
            New release for ${{ matrix.game_name }} ${{ matrix.download_name }}

            New version of ${{ matrix.new_version }} compared to ${{ matrix.releaseTag }}

            Current URL is: ${{ matrix.current_url }}

            App id of ${{ matrix.game_app_id }}

            URL was: ${{ matrix.full_url }}
