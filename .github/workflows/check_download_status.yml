name: Check Download Status

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * MON'

jobs:
  check_status:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.check_download_status.outputs.matrix }}
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Check Download Status
      id: check_download_status
      uses: luxtorpeda-dev/action-check-download-status@main
  create_tickets:
    runs-on: ubuntu-latest
    if: ${{ needs.check_status.outputs.matrix && needs.check_status.outputs.matrix != '{}' && needs.check_status.outputs.matrix != '' }}
    needs: check_status
    strategy:
      matrix: ${{fromJson(needs.check_status.outputs.matrix)}}
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Create Issue for network
      if: ${{ matrix.type == 'network_error' }}
      uses: JasonEtco/create-an-issue@v2
      with:
        filename: .github/workflow_issue_templates/download_network_error.yml
        update_existing: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GAME_NAME: ${{ matrix.game_name }}
        DOWNLOAD_NAME: ${{ matrix.download_name }}
        DOWNLOAD_STATUS: ${{ matrix.download_status }}
        DOWNLOAD_STATUS_TEXT: ${{ matrix.download_status_text }}
        GAME_APP_ID: ${{ matrix.game_app_id }}
        FULL_URL: ${{ matrix.full_url }}
    - name: Create Issue for new release
      if: ${{ matrix.type == 'new_release' }}
      uses: JasonEtco/create-an-issue@v2
      with:
        filename: .github/workflow_issue_templates/download_new_release.yml
        update_existing: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GAME_NAME: ${{ matrix.game_name }}
        DOWNLOAD_NAME: ${{ matrix.download_name }}
        NEW_VERSION: ${{ matrix.new_version }}
        CURRENT_RELEASE: ${{ matrix.current_release }}
        CURRENT_URL: ${{ matrix.current_url }}
        GAME_APP_ID: ${{ matrix.game_app_id }}
